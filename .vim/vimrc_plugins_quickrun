"------------------------------------------------------------
"quicklearnの設定
nnoremap <Leader>R :<C-u>Unite quicklearn -immediately<CR>

autocmd FileType quickrun AnsiEsc

let g:quickrun_config = {}
let g:quickrun_config._ = { 'runner' : 'vimproc' }
"------------------------------------------------------------
"quickrunの設定
if !exists('g:quickrun_config')
  let g:quickrun_config = {}
  let g:quickrun_config['*'] = {}
endif

"--------------------------------------
"markdownの設定
let g:quickrun_config['markdown'] = {
  \'type': 'markdown/kramdown',
  \'outputter': 'browser'
  \}

"--------------------------------------
"coffee-script
let g:quickrun_config['coffee'] = {
  \'command': 'coffee',
  \'exec'   : ['%c -cbp %s']
  \}

"Rspecのエラー行に飛ぶ =================================================
"let g:quickrun_config['*'] = {'split': ''}
" let g:quickrun_config['ruby.rspec'] = {
"   \ 'type' : 'ruby.rspec',
"   \ 'command' : 'rspec',
"   \ 'exec' : '%c %s'
"   \ }
augroup RSpec
  autocmd!
  autocmd BufWinEnter,BufNewFile *_spec.rb set filetype=ruby.spec
augroup END

let g:quickrun_config['ruby.spec'] = {
  \ 'type' : 'ruby',
  \ 'command' : 'rspec',
  \ 'exec' : 'bundle exec %c %o --drb --tty %s'
  \ }
let g:quickrun_config['ruby'] = {
  \ 'type' : 'ruby',
  \ 'command' : 'ruby',
  \ 'exec' : '%c %o %s'
  \ }


let g:my_outputter = quickrun#outputter#multi#new()
let g:my_outputter.config.targets = ["buffer", "quickfix"]

function! my_outputter.init(session)
  :cclose
  call call(quickrun#outputter#multi#new().init, [a:session], self)
endfunction

function! my_outputter.finish(session)
  call call(quickrun#outputter#multi#new().finish, [a:session], self)
  bwipeout quickrun
  :HierUpdate
  :QuickfixStatusEnable
endfunction

call quickrun#register_outputter("my_outputter", my_outputter)
nmap <silent> <leader>r :QuickRun -outputter my_outputter<CR>
nmap <silent> <leader>m :QuickRun<CR>

" let g:quickrun_config['rspec/bundle'] = {
"       \ 'type'     : 'rspec/bundle', 
"       \ 'command'  : 'rspec', 
"       \ 'outputter': 'buffered:target=buffer', 
"       \ 'exec'     : 'bundle exec %c %o --drb --tty %s'
"       \}
" let g:quickrun_config['rspec/normal'] = {
"       \ 'type'     : 'rspec/normal',
"       \ 'command'  : 'rspec',
"       \ 'outputter': 'buffered:target=buffer', 
"       \ 'exec'     : '%c %o --drb --tty %s'
"       \}
" 
" function! RSpecQuickrun()
"   let b:quickrun_config = { 'type' : 'rspec/bundle' }
"   nnoremap <expr><silent> <Leader>be
" endfunction
" autocmd BufReadPost *_spec.rb call RSpecQuickrun()
